Projeto desenvolvido por Enrick Gonçalves, Matheus Gêda e William Gabriel sob a avaliação do professor
Marcio Ribeiro, da disciplina de Estrutura de Dados.

Toda a documentação das funções(exceto as estruturas) do projeto vão estar no padrão abaixo 
que foi escolhido pela equipe de desenvolvimento!

OBS: A documentação das estruturas se encontra no arquivo: estruturas.h

---------------------------------------------------------------------------------------------------------
1 - Nome do arquivo
    1.1: Tipo nome e cabeçalho da função
    1.2: Funcionalidade
    1.3: Parametros da função
    1.4: Tipo de retorno
---------------------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------------------
1 - main.c
    1.1: int main()
    1.2: Não recebe parâmetros
    1.3: A função é responsável por gerar o menu principal do programa
    1.4: retorna 0
---------------------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------------------
2 - compactar.c / h
    1.1: void criar_arquivo(char *nomedoarquivo)
    1.2: Recebe como parâmetro o nome do arquivo original
    1.3: A função é responsável por concatenar e adicionara extensão .huff no arquivo de saída
    1.4: Vazio

    2.1: void compactar_arquivo(FILE *arquivo, FILE *arquivo_final, HASH *hash)
    2.2: Recebe o arquivo original, o arquivo final e a hash contendo as informações do arquivo de entrada
    2.3: A função é reponsável pela compactação e manipulação dos bytes que vão ser escritos no arquivo de saída
    2.4: Vazio

    3.1: void compactar()
    3.2: Não recebe parâmetros
    3.3: A função funciona como um submenu para a área de compactação
    3.4: Vazio
---------------------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------------------
3 - descompactar.c / h
    1.1: void descompactar()
    1.2: Não recebe parâmetros
    1.3: A função funciona como um submenu para a área de descompactação
    1.4: Vazio

    2.1: int descompressao(FILE *compactado, char *nome);
    2.2: Recebe como parametros o arquivo compactado, juntamente de seu nome
    2.3: É responsável por descompactar o arquivo .huff e o trazer ao seu estado original
    2.4: Retorna 0

    3.1: NODE *montar_arvore(FILE *compactado);
    3.2: Recebe como parâmetro o arquivo compactado
    3.3: É a função responsável por remontar a árvore original
    3.4: Retorna o nó raiz da árvore

    4.1: NODE *criar_no_arvore(unsigned char caractere);
    4.2: Recebe como parâmetro um caractere
    4.3: É a função responsável por criar os nós da árvore
    4.4: Retorna o novo nó da árvore

    5.1: void printar_byte(FILE *compactado, FILE *descompactado, NODE *raiz, short tamanho_arvore, short tamanho_lixo, int tamanho_arquivo);
    5.2: Recebe o arquivo compactado, o arquivo descompactado, a raiz da árvore
    o tamanho da árvore, tamanho do lixo e tamanho do arquivo
    5.3: É a função responsável por percorrer a árvore e verificar se os bits estão setados para
    escrever no arquivo descompactado
    5.4: Vazio
---------------------------------------------------------------------------------------------------------
